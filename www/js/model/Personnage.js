class Personnage extends Element {
  constructor(velociteY = 0) {
    super();
    this.velociteY = velociteY;
    this.vie = 3 ;
    this.items = [];
  }

////////////////////////////////////////////////////////////////////////////////
////////////////////////////GETTERS ////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

  getVelocite(){return this.velociteY;}
  getVie(){return this.vie;}
  getItems(){return this.items;}


////////////////////////////////////////////////////////////////////////////////
//////////////////////////// SETTERS////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

  setVelocite(i){this.velociteY = i;}
  setVie(i){this.vie = i;}
  setItems(i){this.items = i;}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////// Gestion de la vie
  decrementerVie(){
    if (this.getVie()<1) {
      this.setVie(this.getVie() -1 );
    }
  }

  incrementerVie(){
    if (this.getVie()<3) {
      this.setVie(this.getVie() +1 );
    }
  }

  estMort(){
    return this.getVie() = 0 ;
  }

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

  /////// Pour les actions
  //Action haut
  sauter(gravite){
    this.setVelocite(gravite);
  }
  //Action Bas
  seBaisser(){
    //// Je sais pas comment faire et j'ai actuelement la flemme de rÃ©flechir
  }
  retomber(){

  }
  //Action Gauche
  deplacementGauche(){
    this.setX(this.getX() -10);
  }
  //Action Droite
  deplacementDroite(){
    this.setX(this.getX()+10);
  }




























}
